# Generated by Django 5.2.1 on 2025-06-05 16:02

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('current_address', models.CharField(max_length=500)),
                ('current_latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('current_longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('destination_address', models.CharField(max_length=500)),
                ('destination_latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('destination_longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('departure_datetime', models.DateTimeField()),
                ('max_fuel_distance_miles', models.PositiveBigIntegerField(default=1000, help_text='Maximum distance between fuel stops in miles', validators=[django.core.validators.MinValueValidator(200), django.core.validators.MaxValueValidator(1200)])),
                ('pickup_duration_minutes', models.PositiveIntegerField(default=60, help_text='Estimated pickup duration in minutes', validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(240)])),
                ('delivery_duration_minutes', models.PositiveIntegerField(default=60, help_text='Estimated delivery duration in minutes', validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(240)])),
                ('total_distance_miles', models.DecimalField(blank=True, decimal_places=2, help_text='Total distance of the trip in miles', max_digits=8, null=True)),
                ('total_driving_time', models.DecimalField(blank=True, decimal_places=2, help_text='Total driving time for the trip in hours', max_digits=6, null=True)),
                ('estimated_arrival_time', models.DateTimeField(blank=True, help_text='Estimated arrival time at the destination', null=True)),
                ('is_hos_compliant', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_type', models.CharField(choices=[('pickup', 'Pickup'), ('delivery', 'Delivery'), ('fuel', 'Fuel Stop'), ('rest', 'Rest Break'), ('mandatory_break', 'Mandatory 30-min Break'), ('daily_reset', 'Daily 10-hour Reset')], max_length=20)),
                ('sequence_order', models.PositiveIntegerField()),
                ('address', models.CharField(max_length=500)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('arrival_time', models.DateTimeField()),
                ('departure_time', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(help_text='Duration of the stop in minutes')),
                ('distance_from_origin_miles', models.DecimalField(decimal_places=2, max_digits=8)),
                ('distance_to_next_stop_miles', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('is_required_for_compliance', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(help_text='The trip associated with these stops', on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='trip_api.trip')),
            ],
            options={
                'ordering': ['trip', 'sequence_order'],
                'unique_together': {('trip', 'sequence_order')},
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_geometry', models.JSONField(help_text='GeoJSON LineString geometry')),
                ('route_instructions', models.JSONField(help_text='Turn-by-turn directions')),
                ('total_distance_meters', models.PositiveBigIntegerField()),
                ('total_duration_seconds', models.PositiveBigIntegerField()),
                ('external_route_id', models.CharField(blank=True, max_length=100)),
                ('api_provider', models.CharField(default='openrouteservice', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.OneToOneField(help_text='The trip associated with this route', on_delete=django.db.models.deletion.CASCADE, related_name='route', to='trip_api.trip')),
            ],
        ),
        migrations.CreateModel(
            name='HOSPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duty_status', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper_berth', 'Sleeper Berth'), ('driving', 'Driving'), ('on_duty_not_driving', 'On Duty (Not Driving)')], max_length=20)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('start_location', models.CharField(blank=True, max_length=500)),
                ('end_location', models.CharField(blank=True, max_length=500)),
                ('start_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('start_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('distance_traveled_miles', models.DecimalField(blank=True, decimal_places=2, help_text='Distance traveled during this HOS period in miles', max_digits=8, null=True)),
                ('is_compliant', models.BooleanField(default=True)),
                ('compliance_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_stop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trip_api.stops')),
                ('trip', models.ForeignKey(help_text='The trip associated with this HOS period', on_delete=django.db.models.deletion.CASCADE, related_name='hos_periods', to='trip_api.trip')),
            ],
            options={
                'ordering': ['trip', 'start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_compliant', models.BooleanField(default=False)),
                ('compliance_score', models.DecimalField(decimal_places=2, help_text='Compliance score as percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_driving_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_on_duty_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_off_duty_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('violations', models.JSONField(default=list, help_text='List of HOS violations found')),
                ('warnings', models.JSONField(default=list, help_text='List of potential compliance issues')),
                ('required_30min_breaks', models.PositiveIntegerField(default=0)),
                ('scheduled_30min_breaks', models.PositiveIntegerField(default=0)),
                ('required_daily_resets', models.PositiveIntegerField(default=0)),
                ('scheduled_daily_resets', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(help_text='The trip associated with this compliance report', on_delete=django.db.models.deletion.CASCADE, related_name='compliance_reports', to='trip_api.trip')),
            ],
        ),
    ]
