# Generated by Django 5.2.1 on 2025-06-12 23:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverCycleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_start_date', models.DateTimeField(help_text='Start of current 8-day cycle')),
                ('total_cycle_hours', models.FloatField(default=0.0, help_text='Total on-duty hours used in current 8-day cycle')),
                ('last_daily_reset_start', models.DateTimeField(blank=True, help_text='When current daily reset (10-hour break) started', null=True)),
                ('last_daily_reset_end', models.DateTimeField(blank=True, help_text='When current daily reset ended', null=True)),
                ('current_duty_status', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper_berth', 'Sleeper Berth'), ('driving', 'Driving'), ('on_duty_not_driving', 'On Duty (Not Driving)')], default='off_duty', max_length=20)),
                ('current_status_start', models.DateTimeField(help_text='When current duty status started')),
                ('today_driving_hours', models.FloatField(default=0.0, help_text='Hours driven TODAY (out of 11 allowed)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(11)])),
                ('today_on_duty_hours', models.FloatField(default=0.0, help_text='Hours on-duty TODAY (out of 14 allowed)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)])),
                ('today_date', models.DateField(auto_now_add=True, help_text='Date these daily totals apply to')),
                ('last_30min_break_end', models.DateTimeField(blank=True, help_text="Time the driver's last 30-minute break ended", null=True)),
                ('continuous_driving_since', models.DateTimeField(blank=True, help_text='Start time of current continuous driving period', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.OneToOneField(limit_choices_to={'is_driver': True}, on_delete=django.db.models.deletion.CASCADE, related_name='cycle_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Driver Cycle Status',
                'verbose_name_plural': 'Driver Cycle Status',
            },
        ),
        migrations.CreateModel(
            name='DailyDrivingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_driving_hours', models.FloatField(default=0.0)),
                ('total_on_duty_hours', models.FloatField(default=0.0)),
                ('total_off_duty_hours', models.FloatField(default=0.0)),
                ('had_30min_break', models.BooleanField(default=False)),
                ('break_start_time', models.DateTimeField(blank=True, null=True)),
                ('break_end_time', models.DateTimeField(blank=True, null=True)),
                ('had_daily_reset', models.BooleanField(default=False)),
                ('reset_start_time', models.DateTimeField(blank=True, null=True)),
                ('reset_end_time', models.DateTimeField(blank=True, null=True)),
                ('is_compliant', models.BooleanField(default=True)),
                ('violations', models.JSONField(default=list, help_text='List of HOS violations for this day')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('driver', 'date')},
            },
        ),
    ]
